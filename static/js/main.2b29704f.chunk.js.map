{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","information","id","alt","name","email","CardList","informations","map","SearchBox","placeholder","changeHandle","type","onChange","App","e","setState","search","target","value","state","fetch","then","responses","json","users","this","filteredInformation","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,YAAYC,GAA5C,0BAAwEC,IAAKL,EAAMG,YAAYG,OACvG,6BAAKN,EAAMG,YAAYG,OACvB,4BAAIN,EAAMG,YAAYI,YCHjBC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAEDD,EAAMS,aAAaC,KAAK,SAAAP,GAAW,OACjC,cAAC,EAAD,CAA2BA,YAAaA,GAA7BA,EAAYC,UCLtBO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCCG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,OAAQF,EAAEG,OAAOC,SAXhC,EAAKC,MAAQ,CACXb,aAAe,GACfU,OAAQ,IAJE,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAS,OAAIA,EAAUC,UAC5BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,aAAekB,S,oBAK/C,WACE,MAAgCC,KAAKN,MAA7Bb,EAAR,EAAQA,aAAcU,EAAtB,EAAsBA,OAChBU,EAAsBpB,EAAaqB,QAAQ,SAAA3B,GAAW,OAC1DA,EAAYG,KAAKyB,cAAcC,SAASb,EAAOY,kBAEjD,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,mBAAGA,UAAU,WAAb,iCACA,cAAC,EAAD,CACAW,YAAa,SACbC,aAAgBe,KAAKf,eAErB,cAAC,EAAD,CAAUJ,aAAcoB,W,GA7BdI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b29704f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.information.id}?set=set2&size=180x180`} alt={props.information.name} />\r\n        <h2>{props.information.name}</h2>\r\n        <p>{props.information.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\nimport './card-list.style.css';\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    return <div className=\"card-list\">\r\n         {\r\n          props.informations.map( information => (\r\n            <Card key={information.id} information={information}/>\r\n          ))\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, changeHandle}) => (\r\n    <input className=\"search\"\r\n    type=\"search\" \r\n    placeholder={placeholder} \r\n    onChange={changeHandle}/>\r\n);","import './App.css';\nimport React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      informations : [],\n      search: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(responses => responses.json())\n    .then(users => this.setState({informations : users}))\n  }\n  changeHandle = e => {\n    this.setState({search: e.target.value})\n  }\n  render() {\n    const { informations, search} = this.state;\n    const filteredInformation = informations.filter( information => \n      information.name.toLowerCase().includes(search.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Kalimi Monster</h1>\n        <p className=\"subtitle\">Built with React.js</p>\n        <SearchBox \n        placeholder={\"Search\"}\n        changeHandle = {this.changeHandle}\n         />\n        <CardList informations={filteredInformation} />\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}